class Yes {
    client: string;
    details: string;
    Age: number;
  
    constructor(c: string, d: string, a: number){
      this.client = c;
      this.details = d;
      this.Age = a;
    }
  
    format() {
      return `${this.client} owes Â£${this.Age} for ${this.details}`;
    }
  }

  class No {
    client: string;
    details: string;
    Age: number;
  
    constructor(c: string, d: string, a: number){
      this.client = c;
      this.details = d;
      this.Age = a;
    }
  
    format() {
      return `${this.client} is owed s${this.Age} for ${this.details}`;
    }
  }
  
  const invOne = new Yes('mario', 'work on the mario website', 250);
  const invTwo = new Yes('luigi', 'work on the luigi website', 300);
  
  let Yess: Yes[] = [];
  Yess.push(invOne)
  Yess.push(invTwo);
  
  
  Yess.forEach(inv=>{
      console.log(inv.format());
  });
  
  
  const form = document.querySelector('.new-item-form') as HTMLFormElement;
  //console.log(form.children);
  
  // inputs
  const IndianCricketer = document.querySelector('#IndianCricketer') as HTMLInputElement;
  const Name = document.querySelector('#Name') as HTMLInputElement;
  const details = document.querySelector('#details') as HTMLInputElement;
  const Age = document.querySelector('#Age') as HTMLInputElement;
  
  form.addEventListener('submit', (e: Event) => {
    e.preventDefault();
  
    console.log(
      IndianCricketer.value, 
      Name.value, 
      details.value, 
      Age.valueAsNumber
    );
  });